namespace switchboard;

union Content { ViewStart, ViewUpdate, ViewAck, ViewEnd, Broadcast }

enum Capability: uint { FullScreen = 0, BitwiseIncremental = 1 }

table Broadcast {
    text: string;
}

table ViewStart {
    capabilities:uint; // e.g. does it support incremental updates, different encodings..
}

table ViewEnd { } // it merely is..

table ViewAck {
  sqn: uint;
}

table Tile {
    x: ushort;
    y: ushort;
    data: [ubyte];
}

table ViewUpdate {
    sqn: uint; // assue nobody ever requires more than 2 billion updates.
    incremental: bool = true; // assume that incremental updates are more frequent that initial/full.
    data: [ubyte];
    tiles: [Tile];
}


// on later consideration, the session should be a rabbit header, not part of the buffer.
// this is so that we do not depend on the front-end to know or populate the header,
// nor require the switchboard to mutate (i.e. create a copy of) the flatbuffer to add it en passant.
table Msg {
    session: string;
    content: Content;
}

root_type Msg;
